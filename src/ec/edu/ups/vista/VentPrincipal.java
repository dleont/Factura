/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.edu.ups.vista;

import ec.edu.ups.vista.producto.CrearProducto;
import ec.edu.ups.vista.producto.BuscarProducto;
import ec.edu.ups.vista.producto.EliminarProducto;
import ec.edu.ups.vista.producto.ListarProducto;
import ec.edu.ups.vista.producto.ActualizarProducto;
import ec.edu.ups.vista.cliente.EliminarCliente;
import ec.edu.ups.vista.cliente.BuscarCliente;
import ec.edu.ups.vista.cliente.ActualizarCliente;
import ec.edu.ups.vista.cliente.CrearCliente;
import ec.edu.ups.vista.cliente.ListarCliente;
import ec.edu.ups.controlador.ControladorCliente;
import ec.edu.ups.controlador.ControladorDetalle;
import ec.edu.ups.controlador.ControladorFactura;
import ec.edu.ups.controlador.ControladorProducto;
import ec.edu.ups.vista.factura.CrearFactura;
import ec.edu.ups.vista.factura.EliminarFactura;
import java.util.Locale;
import java.util.ResourceBundle;

/**
 *
 * @author Darwin
 */
public class VentPrincipal extends javax.swing.JFrame {
    //atributos de controladores
    private ControladorCliente controlCliente;   
    private ControladorProducto controlProducto;
    private ControladorFactura controlFactura;
    private ControladorDetalle controlDetalle; 
    //atributos para cambiar el idioma
    private CrearCliente crearCliente;
    private BuscarCliente buscarCliente;
    private ActualizarCliente actualizarCliente;
    private ListarCliente listarCliente;
    private EliminarCliente eliminarCliente;
    private CrearProducto crearProducto;
    private BuscarProducto buscarProducto;
    private ActualizarProducto actualizarProducto;
    private ListarProducto listarProducto;
    private EliminarProducto eliminarProducto;
    private CrearFactura crearFactura;
    private EliminarFactura eliminarFactura;
    //clases del paquete util, sirven para la internacionalizacion
    private Locale localizacion;
    private ResourceBundle mensajes;
    
    /**
     * Creates new form VentPrincipal
     */
    public VentPrincipal() {
        initComponents();
        controlCliente = new ControladorCliente();
        controlProducto = new ControladorProducto();
        controlFactura = new ControladorFactura();
        //controlDetalle = new ControladorDetalle();
        
        //System.out.println("Localizacion por defecto: "+Locale.getDefault().getLanguage());
        localizacion = new Locale("es","EC"); //recibe: 1.idioma y 2.localizacion
        Locale.setDefault(localizacion);
        //System.out.println(" Localizacion forzada: "+Locale.getDefault().getLanguage());
    
        /*mensajes = ResourceBundle.getBundle("ec.edu.ups.idiomas.mensajes", Locale.getDefault()); //archivo al cual voy a acceder
        System.out.println(" Mensajes ");
        System.out.println(mensajes.getString("menu.item.crear"));*/
        
        cambiarIdioma();
        
    }
    
    public void cambiarIdioma(){
        mensajes = ResourceBundle.getBundle("ec.edu.ups.idiomas.mensajes", Locale.getDefault());
        //menu Cliente de la clase principal y sus items
        menuCliente.setText(mensajes.getString("menu.cliente"));
        menuCrear.setText(mensajes.getString("menu.item.crear"));
        menuBuscar.setText(mensajes.getString("menu.item.buscar"));
        menuActualizar.setText(mensajes.getString("menu.item.actualizar"));
        menuEliminar.setText(mensajes.getString("menu.item.eliminar"));
        menuListar.setText(mensajes.getString("menu.item.listar"));
        //menu Prodcuto de la clase principal y susu items
        menuProducto.setText(mensajes.getString("menu.producto"));
        menuCrearProducto.setText(mensajes.getString("menu.item.crear"));
        menuBuscarProducto.setText(mensajes.getString("menu.item.buscar"));
        menuActualizarProducto.setText(mensajes.getString("menu.item.actualizar"));
        menuEliminarProducto.setText(mensajes.getString("menu.item.eliminar"));
        menuListarProducto.setText(mensajes.getString("menu.item.listar"));
        
        menuFactura.setText(mensajes.getString("menu.factura"));
        menuCrearFactura.setText(mensajes.getString("menu.item.crear"));
        menuEliminarFactura.setText(mensajes.getString("menu.item.eliminar"));
        
        menuIdioma.setText(mensajes.getString("menu.idioma"));
        menuEspañol.setText(mensajes.getString("menu.item.español"));
        menuEnglish.setText(mensajes.getString("menu.item.english"));
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        menuCliente = new javax.swing.JMenu();
        menuCrear = new javax.swing.JMenuItem();
        menuBuscar = new javax.swing.JMenuItem();
        menuActualizar = new javax.swing.JMenuItem();
        menuEliminar = new javax.swing.JMenuItem();
        menuListar = new javax.swing.JMenuItem();
        menuProducto = new javax.swing.JMenu();
        menuCrearProducto = new javax.swing.JMenuItem();
        menuBuscarProducto = new javax.swing.JMenuItem();
        menuActualizarProducto = new javax.swing.JMenuItem();
        menuListarProducto = new javax.swing.JMenuItem();
        menuEliminarProducto = new javax.swing.JMenuItem();
        menuFactura = new javax.swing.JMenu();
        menuCrearFactura = new javax.swing.JMenuItem();
        menuEliminarFactura = new javax.swing.JMenuItem();
        menuIdioma = new javax.swing.JMenu();
        menuEspañol = new javax.swing.JMenuItem();
        menuEnglish = new javax.swing.JMenuItem();

        jMenuItem3.setText("jMenuItem3");

        jMenuItem4.setText("jMenuItem4");

        jMenuItem5.setText("jMenuItem5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        menuCliente.setMnemonic('f');
        menuCliente.setText("Cliente");

        menuCrear.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        menuCrear.setMnemonic('o');
        menuCrear.setText("Crear");
        menuCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCrearActionPerformed(evt);
            }
        });
        menuCliente.add(menuCrear);

        menuBuscar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        menuBuscar.setMnemonic('s');
        menuBuscar.setText("Buscar");
        menuBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBuscarActionPerformed(evt);
            }
        });
        menuCliente.add(menuBuscar);

        menuActualizar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        menuActualizar.setMnemonic('a');
        menuActualizar.setText("Actualizar");
        menuActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuActualizarActionPerformed(evt);
            }
        });
        menuCliente.add(menuActualizar);

        menuEliminar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        menuEliminar.setMnemonic('x');
        menuEliminar.setText("Eliminar");
        menuEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEliminarActionPerformed(evt);
            }
        });
        menuCliente.add(menuEliminar);

        menuListar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        menuListar.setText("Listar");
        menuListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuListarActionPerformed(evt);
            }
        });
        menuCliente.add(menuListar);

        menuBar.add(menuCliente);

        menuProducto.setMnemonic('e');
        menuProducto.setText("Producto");

        menuCrearProducto.setMnemonic('t');
        menuCrearProducto.setText("Crear");
        menuCrearProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCrearProductoActionPerformed(evt);
            }
        });
        menuProducto.add(menuCrearProducto);

        menuBuscarProducto.setMnemonic('y');
        menuBuscarProducto.setText("Buscar");
        menuBuscarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBuscarProductoActionPerformed(evt);
            }
        });
        menuProducto.add(menuBuscarProducto);

        menuActualizarProducto.setMnemonic('p');
        menuActualizarProducto.setText("Actualizar");
        menuActualizarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuActualizarProductoActionPerformed(evt);
            }
        });
        menuProducto.add(menuActualizarProducto);

        menuListarProducto.setMnemonic('d');
        menuListarProducto.setText("Listar");
        menuListarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuListarProductoActionPerformed(evt);
            }
        });
        menuProducto.add(menuListarProducto);

        menuEliminarProducto.setText("Eliminar");
        menuEliminarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEliminarProductoActionPerformed(evt);
            }
        });
        menuProducto.add(menuEliminarProducto);

        menuBar.add(menuProducto);

        menuFactura.setText("Factura ");

        menuCrearFactura.setMnemonic('c');
        menuCrearFactura.setText("Crear");
        menuCrearFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCrearFacturaActionPerformed(evt);
            }
        });
        menuFactura.add(menuCrearFactura);

        menuEliminarFactura.setText("Eliminar");
        menuEliminarFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEliminarFacturaActionPerformed(evt);
            }
        });
        menuFactura.add(menuEliminarFactura);

        menuBar.add(menuFactura);

        menuIdioma.setText("Idioma");

        menuEspañol.setText("Español");
        menuEspañol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEspañolActionPerformed(evt);
            }
        });
        menuIdioma.add(menuEspañol);

        menuEnglish.setText("English");
        menuEnglish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEnglishActionPerformed(evt);
            }
        });
        menuIdioma.add(menuEnglish);

        menuBar.add(menuIdioma);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 863, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(desktopPane, javax.swing.GroupLayout.PREFERRED_SIZE, 775, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEliminarActionPerformed
        if(eliminarCliente == null || !eliminarCliente.isVisible()){
        eliminarCliente = new EliminarCliente(controlCliente, mensajes);
        eliminarCliente.setVisible(true);
        desktopPane.add(eliminarCliente);
        }
    }//GEN-LAST:event_menuEliminarActionPerformed

    private void menuCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCrearActionPerformed
        // TODO add your handling code here:
        if(crearCliente == null || !crearCliente.isVisible()){
        crearCliente = new CrearCliente(controlCliente, mensajes);
        crearCliente.setVisible(true);
        desktopPane.add(crearCliente);
        }
    }//GEN-LAST:event_menuCrearActionPerformed

    private void menuBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBuscarActionPerformed
        if(buscarCliente == null || !buscarCliente.isVisible()){
        buscarCliente = new BuscarCliente(controlCliente, mensajes);
        buscarCliente.setVisible(true);
        desktopPane.add(buscarCliente);
        }
    }//GEN-LAST:event_menuBuscarActionPerformed

    private void menuActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuActualizarActionPerformed
        if(actualizarCliente == null || !actualizarCliente.isVisible()){
        actualizarCliente= new ActualizarCliente(controlCliente, mensajes);       
        actualizarCliente.setVisible(true);
        desktopPane.add(actualizarCliente);
        }
    }//GEN-LAST:event_menuActualizarActionPerformed

    private void menuListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuListarActionPerformed
        if(listarCliente == null || !listarCliente.isVisible()){
        listarCliente= new ListarCliente(controlCliente, mensajes);
        listarCliente.setVisible(true);
        desktopPane.add(listarCliente);
        }
    }//GEN-LAST:event_menuListarActionPerformed

    private void menuCrearProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCrearProductoActionPerformed
        if(crearProducto == null || !crearProducto.isVisible()){
        crearProducto= new CrearProducto(controlProducto, mensajes);
        crearProducto.setVisible(true);
        desktopPane.add(crearProducto);
        }
    }//GEN-LAST:event_menuCrearProductoActionPerformed

    private void menuBuscarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBuscarProductoActionPerformed
        if(buscarProducto == null || !buscarProducto.isVisible()){
        buscarProducto= new BuscarProducto(controlProducto, mensajes);
        buscarProducto.setVisible(true);
        desktopPane.add(buscarProducto);
        }
    }//GEN-LAST:event_menuBuscarProductoActionPerformed

    private void menuActualizarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuActualizarProductoActionPerformed
        if (actualizarProducto == null || !actualizarProducto.isVisible()) {
            actualizarProducto = new ActualizarProducto(controlProducto, mensajes);
            actualizarProducto.setVisible(true);
            desktopPane.add(actualizarProducto);
        }
    }//GEN-LAST:event_menuActualizarProductoActionPerformed

    private void menuListarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuListarProductoActionPerformed
        if(listarProducto == null || !listarProducto.isVisible()){
        listarProducto= new ListarProducto(controlProducto, mensajes );
        listarProducto.setVisible(true);
        desktopPane.add(listarProducto);
        }
    }//GEN-LAST:event_menuListarProductoActionPerformed

    private void menuEliminarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEliminarProductoActionPerformed
        if(eliminarProducto == null || !eliminarProducto.isVisible()){
        eliminarProducto= new EliminarProducto(controlProducto, mensajes);
         eliminarProducto.setVisible(true);
        desktopPane.add(eliminarProducto);
        }
    }//GEN-LAST:event_menuEliminarProductoActionPerformed

    private void menuCrearFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCrearFacturaActionPerformed
        if(crearFactura == null || !crearFactura.isVisible()){
        crearFactura= new CrearFactura(controlFactura, controlCliente, controlProducto, controlDetalle, mensajes);
        crearFactura.setVisible(true);
        desktopPane.add(crearFactura);
       // CrearFactura.cambiarIdioma(localizacion);
        }
        
    }//GEN-LAST:event_menuCrearFacturaActionPerformed

    private void menuEspañolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEspañolActionPerformed
       localizacion = new Locale("es","EC");
       Locale.setDefault(localizacion);
       cambiarIdioma();
    }//GEN-LAST:event_menuEspañolActionPerformed

    private void menuEnglishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEnglishActionPerformed
        localizacion = new Locale("en","US");
        Locale.setDefault(localizacion);
        cambiarIdioma();
        
        if (crearCliente != null && crearCliente.isVisible()) {
            crearCliente.cambiarIdioma(mensajes);
        }
        if (buscarCliente != null && buscarCliente.isVisible()) {
            buscarCliente.cambiarIdioma(mensajes);
        }
        if (actualizarCliente != null && actualizarCliente.isVisible()) {
            actualizarCliente.cambiarIdioma(mensajes);
        }
        if (eliminarCliente != null && eliminarCliente.isVisible()) {
            eliminarCliente.cambiarIdioma(mensajes);
        }
        if (listarCliente != null && listarCliente.isVisible()) {
            listarCliente.cambiarIdioma(mensajes);
        }
        //prodcuto
        if (crearProducto != null && crearProducto.isVisible()) {
            crearProducto.cambiarIdioma(mensajes);
        }
        if (buscarProducto != null && buscarProducto.isVisible()) {
            buscarProducto.cambiarIdioma(mensajes);
        }
        if (actualizarProducto != null && actualizarProducto.isVisible()) {
            actualizarProducto.cambiarIdioma(mensajes);
        }
        if (eliminarProducto != null && eliminarProducto.isVisible()) {
            eliminarProducto.cambiarIdioma(mensajes);
        }
        if (listarProducto != null && listarProducto.isVisible()) {
            listarProducto.cambiarIdioma(mensajes);
        }
        //factura
        if (crearFactura != null && crearFactura.isVisible()) {
            crearFactura.cambiarIdioma(mensajes);
        }
        if (eliminarFactura != null && eliminarFactura.isVisible()) {
            eliminarFactura.cambiarIdioma(mensajes);
        }
    }//GEN-LAST:event_menuEnglishActionPerformed

    private void menuEliminarFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEliminarFacturaActionPerformed
        if (eliminarFactura == null || !eliminarFactura.isVisible()) {
            eliminarFactura = new EliminarFactura(controlFactura, mensajes);
            eliminarFactura.setVisible(true);
            desktopPane.add(eliminarFactura);
            cambiarIdioma();
        }
    }//GEN-LAST:event_menuEliminarFacturaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem menuActualizar;
    private javax.swing.JMenuItem menuActualizarProducto;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem menuBuscar;
    private javax.swing.JMenuItem menuBuscarProducto;
    private javax.swing.JMenu menuCliente;
    private javax.swing.JMenuItem menuCrear;
    private javax.swing.JMenuItem menuCrearFactura;
    private javax.swing.JMenuItem menuCrearProducto;
    private javax.swing.JMenuItem menuEliminar;
    private javax.swing.JMenuItem menuEliminarFactura;
    private javax.swing.JMenuItem menuEliminarProducto;
    private javax.swing.JMenuItem menuEnglish;
    private javax.swing.JMenuItem menuEspañol;
    private javax.swing.JMenu menuFactura;
    private javax.swing.JMenu menuIdioma;
    private javax.swing.JMenuItem menuListar;
    private javax.swing.JMenuItem menuListarProducto;
    private javax.swing.JMenu menuProducto;
    // End of variables declaration//GEN-END:variables

}
